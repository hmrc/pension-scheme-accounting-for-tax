# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = pension-scheme-accounting-for-tax

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# this key is for local development only!
queryParameter.encryption.key="gvBoGdgzqG1AarzF1LY0zQ=="

# Session configuration
# ~~~~~
application.session.httpOnly = false
application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

mongo.migration.enable.migration = false
play.modules.enabled += "StartupModule"

# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/"${appName}
  aft-cache {
    maxSize = 512000

    aft-journey {
        name = aft-journey
        timeToLiveInSeconds = 999999
    }

    aft-batches {
        name = aft-batches
        timeToLiveInSeconds = 900
        maxTimeToLiveInSeconds = 43200
        userDataBatchSize = 50
    }

    financial-info-cache {
        name = financial-info
        timeToLiveInSeconds = 900
    }

    file-upload-outcome {
        name = file-upload-outcome
        timeToLiveInSeconds = 900
    }

    financial-info-credit-access {
        name = financial-info-credit-access
        timeToLiveInDays = 28
    }

    get-overview-cache {
        name = get-overview-cached
        timeToLiveInSeconds = 1800
    }
    toggle-data {
        name = toggle-data
    }
    admin-data {
         name = admin-data
    }
    file-upload-response-cache {
        name = file-upload-response
        timeToLiveInSeconds = 604800
    }
    submit-aft-return-cache {
        name = submit-aft-return
        timeToLiveInSeconds = 120
    }
  }
}

serviceUrls {
  file-aft-return = "/pension-online/%s/aft/return"

  get-aft-details = "/pension-online/%s/aft/details"
  get-aft-version = "/pension-online/reports/%s/AFT/versions?startDate=%s"

  get-aft-overview = "/pension-online/reports/overview/pods/%s/AFT?fromDate=%s&toDate=%s"
  psa-financial-statement = "/pension-online/financial-statements/psaid/%s?dataset=medium"
  psa-financial-statement-max = "/pension-online/financial-statements/psaid/%s?dataset=maximum"
  scheme-financial-statement = "/pension-online/financial-statements/pstr/%s?dataset=medium"
  scheme-financial-statement-max = "/pension-online/financial-statements/pstr/%s?dataset=maximum"
}

microservice {

  services {
    des-hod {
      host = localhost
      port = 8202
      env = "ist0"
      authorizationToken = "local"
    }

    if-hod {
      host = localhost
      port = 8202
      env = "ist0"
      authorizationToken = "local"
    }

    auth {
      host = localhost
      port = 8500
    }
  }
}

play.http.parser.maxDiskBuffer = 20MB
parsers.anyContent.maxLength = 20MB
play.http.parser.maxMemoryBuffer = 20MB
akka.http.parsing.max-content-length = 20MB
play.server.akka.max-content-length = 20MB
play.server.akka.http.parsing.max-content-length = 20MB